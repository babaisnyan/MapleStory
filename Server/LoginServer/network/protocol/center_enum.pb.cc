// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: center_enum.proto

#include "center_enum.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace protocol {
}  // namespace protocol
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_center_5fenum_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_center_5fenum_2eproto = nullptr;
const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_center_5fenum_2eproto::offsets[1] = {};
static constexpr ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema* schemas = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::Message* const* file_default_instances = nullptr;

const char descriptor_table_protodef_center_5fenum_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\021center_enum.proto\022\010protocol*n\n\nServerT"
  "ype\022\033\n\027SERVER_TYPE_UNSPECIFIED\020\000\022\026\n\022SERV"
  "ER_TYPE_CENTER\020\001\022\025\n\021SERVER_TYPE_LOGIN\020\002\022"
  "\024\n\020SERVER_TYPE_GAME\020\003*\334\001\n\024ServerRegister"
  "Result\022&\n\"SERVER_REGISTER_RESULT_UNSPECI"
  "FIED\020\000\022\"\n\036SERVER_REGISTER_RESULT_SUCCESS"
  "\020\001\022-\n)SERVER_REGISTER_RESULT_ALREADY_REG"
  "ISTERED\020\002\022\'\n#SERVER_REGISTER_RESULT_INVA"
  "LID_TYPE\020\003\022 \n\034SERVER_REGISTER_RESULT_ERR"
  "OR\020\004b\006proto3"
  ;
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_center_5fenum_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_center_5fenum_2eproto = {
  false, false, 372, descriptor_table_protodef_center_5fenum_2eproto, "center_enum.proto", 
  &descriptor_table_center_5fenum_2eproto_once, nullptr, 0, 0,
  schemas, file_default_instances, TableStruct_center_5fenum_2eproto::offsets,
  nullptr, file_level_enum_descriptors_center_5fenum_2eproto, file_level_service_descriptors_center_5fenum_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_center_5fenum_2eproto_getter() {
  return &descriptor_table_center_5fenum_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_center_5fenum_2eproto(&descriptor_table_center_5fenum_2eproto);
namespace protocol {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ServerType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_center_5fenum_2eproto);
  return file_level_enum_descriptors_center_5fenum_2eproto[0];
}
bool ServerType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ServerRegisterResult_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_center_5fenum_2eproto);
  return file_level_enum_descriptors_center_5fenum_2eproto[1];
}
bool ServerRegisterResult_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace protocol
PROTOBUF_NAMESPACE_OPEN
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
